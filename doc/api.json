{
  "openapi": "3.0.0",
  "info": {
    "title": "PixaDigital Backend API",
    "description": "API documentation for authentication endpoints",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api",
      "description": "Development server"
    },
    {
      "url": "https://pixadigital.example.com/api",
      "description": "Production server"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Creates a new user account and returns an authentication token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password", "password_confirmation"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's full name",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 8,
                    "description": "User's password (minimum 8 characters)",
                    "example": "securePassword123"
                  },
                  "password_confirmation": {
                    "type": "string",
                    "format": "password",
                    "description": "Confirmation of the password",
                    "example": "securePassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string",
                      "description": "Bearer token for authentication",
                      "example": "1|personalaccesstokenhere..."
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Type of token",
                      "example": "Bearer"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The given data was invalid."
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "email": [
                          "The email has already been taken."
                        ],
                        "password": [
                          "The password must be at least 8 characters."
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Authenticate user and get token",
        "description": "Authenticates a user and returns an authentication token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "User's password",
                    "example": "securePassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string",
                      "description": "Bearer token for authentication",
                      "example": "1|personalaccesstokenhere..."
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Type of token",
                      "example": "Bearer"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The given data was invalid."
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "email": [
                          "The provided credentials are incorrect."
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logout user",
        "description": "Revokes the current authentication token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logged out successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get authenticated user",
        "description": "Returns the currently authenticated user's information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Authenticated user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "User's unique identifier",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "User's full name",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": "john@example.com"
          },
          "email_verified_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Timestamp when email was verified",
            "example": "2023-01-01T00:00:00.000000Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when user was created",
            "example": "2023-01-01T00:00:00.000000Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when user was last updated",
            "example": "2023-01-01T00:00:00.000000Z"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter 'Bearer' [space] and then your token in the text input below"
      }
    }
  }
}